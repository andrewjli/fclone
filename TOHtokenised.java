('AT', '@')
('IDENTIFIER', 'SuppressWarnings')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'unchecked')
('QUOTEMARK', '"')
('RPAREN', ')')
('CLASS', 'class')
('IDENTIFIER', 'TOH')
('LBRACE', '{')
('STATIC', 'static')
('TYPE_INT', 'int')
('IDENTIFIER', 'movecount')
('ASSIGN', '=')
('INTEGER', '0')
('STATIC', 'static')
('PUBLIC', 'public')
('TYPE_VOID', 'void')
('IDENTIFIER', 'Solve2DiscsTOH')
('LPAREN', '(')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'temp')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'dest')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'dest')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'temp')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('RBRACE', '}')
('STATIC', 'static')
('PUBLIC', 'public')
('TYPE_INT', 'int')
('IDENTIFIER', 'SolveTOH')
('LPAREN', '(')
('TYPE_INT', 'int')
('IDENTIFIER', 'nDiscs')
('COMMA', ',')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('LESSTHAN_EQUALTO', '<=')
('INTEGER', '4')
('RPAREN', ')')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('REMAINDER', '%')
('INTEGER', '2')
('RPAREN', ')')
('EQUALTO', '==')
('INTEGER', '0')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'Solve2DiscsTOH')
('LPAREN', '(')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('IDENTIFIER', 'nDiscs')
('ASSIGN', '=')
('IDENTIFIER', 'nDiscs')
('MINUS', '-')
('INTEGER', '1')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('EQUALTO', '==')
('INTEGER', '1')
('RPAREN', ')')
('LBRACE', '{')
('RETURN', 'return')
('INTEGER', '1')
('RBRACE', '}')
('IDENTIFIER', 'temp')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'Solve2DiscsTOH')
('LPAREN', '(')
('IDENTIFIER', 'dest')
('COMMA', ',')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'temp')
('RPAREN', ')')
('IDENTIFIER', 'dest')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'SolveTOH')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('COMMA', ',')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('RBRACE', '}')
('ELSE', 'else')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('EQUALTO', '==')
('INTEGER', '1')
('RPAREN', ')')
('LBRACE', '{')
('RETURN', 'return')
('INTEGER', '-1')
('RBRACE', '}')
('IDENTIFIER', 'Solve2DiscsTOH')
('LPAREN', '(')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'dest')
('COMMA', ',')
('IDENTIFIER', 'temp')
('RPAREN', ')')
('IDENTIFIER', 'nDiscs')
('ASSIGN', '=')
('IDENTIFIER', 'nDiscs')
('MINUS', '-')
('INTEGER', '1')
('IDENTIFIER', 'dest')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'Solve2DiscsTOH')
('LPAREN', '(')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('RBRACE', '}')
('RETURN', 'return')
('INTEGER', '1')
('RBRACE', '}')
('ELSE', 'else')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('GREATERTHAN_EQUALTO', '>=')
('INTEGER', '5')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'SolveTOH')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('MINUS', '-')
('INTEGER', '2')
('COMMA', ',')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('IDENTIFIER', 'temp')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'SolveTOH')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('MINUS', '-')
('INTEGER', '2')
('COMMA', ',')
('IDENTIFIER', 'dest')
('COMMA', ',')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'temp')
('RPAREN', ')')
('IDENTIFIER', 'dest')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'source')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('IDENTIFIER', 'movecount')
('INCREMENT', '++')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'SolveTOH')
('LPAREN', '(')
('IDENTIFIER', 'nDiscs')
('MINUS', '-')
('INTEGER', '1')
('COMMA', ',')
('IDENTIFIER', 'temp')
('COMMA', ',')
('IDENTIFIER', 'source')
('COMMA', ',')
('IDENTIFIER', 'dest')
('RPAREN', ')')
('RBRACE', '}')
('RETURN', 'return')
('INTEGER', '1')
('RBRACE', '}')
('STATIC', 'static')
('PUBLIC', 'public')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'A')
('ASSIGN', '=')
('NEW', 'new')
('IDENTIFIER', 'Stack')
('LPAREN', '(')
('RPAREN', ')')
('STATIC', 'static')
('PUBLIC', 'public')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'B')
('ASSIGN', '=')
('NEW', 'new')
('IDENTIFIER', 'Stack')
('LPAREN', '(')
('RPAREN', ')')
('STATIC', 'static')
('PUBLIC', 'public')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 'C')
('ASSIGN', '=')
('NEW', 'new')
('IDENTIFIER', 'Stack')
('LPAREN', '(')
('RPAREN', ')')
('STATIC', 'static')
('PUBLIC', 'public')
('TYPE_VOID', 'void')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'countA')
('NOT_EQUALTO', '!=')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('OR', '||')
('IDENTIFIER', 'countB')
('NOT_EQUALTO', '!=')
('IDENTIFIER', 'B')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('OR', '||')
('IDENTIFIER', 'countC')
('NOT_EQUALTO', '!=')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('LBRACE', '{')
('TYPE_INT', 'int')
('IDENTIFIER', 'diffA')
('ASSIGN', '=')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('MINUS', '-')
('IDENTIFIER', 'countA')
('TYPE_INT', 'int')
('IDENTIFIER', 'diffB')
('ASSIGN', '=')
('IDENTIFIER', 'B')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('MINUS', '-')
('IDENTIFIER', 'countB')
('TYPE_INT', 'int')
('IDENTIFIER', 'diffC')
('ASSIGN', '=')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('MINUS', '-')
('IDENTIFIER', 'countC')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'diffA')
('EQUALTO', '==')
('INTEGER', '1')
('RPAREN', ')')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'diffB')
('EQUALTO', '==')
('INTEGER', '-1')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Move')
('IDENTIFIER', 'Disc')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'peek')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('QUOTEMARK', '"')
('IDENTIFIER', 'From')
('IDENTIFIER', 'B')
('IDENTIFIER', 'To')
('IDENTIFIER', 'A')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('ELSE', 'else')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Move')
('IDENTIFIER', 'Disc')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'peek')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('QUOTEMARK', '"')
('IDENTIFIER', 'From')
('IDENTIFIER', 'C')
('IDENTIFIER', 'To')
('IDENTIFIER', 'A')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('RBRACE', '}')
('ELSE', 'else')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'diffB')
('EQUALTO', '==')
('INTEGER', '1')
('RPAREN', ')')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'diffA')
('EQUALTO', '==')
('INTEGER', '-1')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Move')
('IDENTIFIER', 'Disc')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'B')
('PERIOD', '.')
('IDENTIFIER', 'peek')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('QUOTEMARK', '"')
('IDENTIFIER', 'From')
('IDENTIFIER', 'A')
('IDENTIFIER', 'To')
('IDENTIFIER', 'B')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('ELSE', 'else')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Move')
('IDENTIFIER', 'Disc')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'B')
('PERIOD', '.')
('IDENTIFIER', 'peek')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('QUOTEMARK', '"')
('IDENTIFIER', 'From')
('IDENTIFIER', 'C')
('IDENTIFIER', 'To')
('IDENTIFIER', 'B')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('RBRACE', '}')
('ELSE', 'else')
('LBRACE', '{')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'diffA')
('EQUALTO', '==')
('INTEGER', '-1')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Move')
('IDENTIFIER', 'Disc')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'peek')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('QUOTEMARK', '"')
('IDENTIFIER', 'From')
('IDENTIFIER', 'A')
('IDENTIFIER', 'To')
('IDENTIFIER', 'C')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('ELSE', 'else')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Move')
('IDENTIFIER', 'Disc')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'peek')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('QUOTEMARK', '"')
('IDENTIFIER', 'From')
('IDENTIFIER', 'B')
('IDENTIFIER', 'To')
('IDENTIFIER', 'C')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('RBRACE', '}')
('IDENTIFIER', 'countA')
('ASSIGN', '=')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'countB')
('ASSIGN', '=')
('IDENTIFIER', 'B')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'countC')
('ASSIGN', '=')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'println')
('LPAREN', '(')
('RPAREN', ')')
('RBRACE', '}')
('IDENTIFIER', 'PrintStack')
('LPAREN', '(')
('IDENTIFIER', 'A')
('RPAREN', ')')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('COMMA', ',')
('QUOTEMARK', '"')
('RPAREN', ')')
('IDENTIFIER', 'PrintStack')
('LPAREN', '(')
('IDENTIFIER', 'B')
('RPAREN', ')')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('COMMA', ',')
('QUOTEMARK', '"')
('RPAREN', ')')
('IDENTIFIER', 'PrintStack')
('LPAREN', '(')
('IDENTIFIER', 'C')
('RPAREN', ')')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('QUOTEMARK', '"')
('COMMA', ',')
('QUOTEMARK', '"')
('RPAREN', ')')
('RBRACE', '}')
('STATIC', 'static')
('TYPE_INT', 'int')
('IDENTIFIER', 'countA')
('ASSIGN', '=')
('INTEGER', '0')
('STATIC', 'static')
('TYPE_INT', 'int')
('IDENTIFIER', 'countB')
('ASSIGN', '=')
('INTEGER', '0')
('STATIC', 'static')
('TYPE_INT', 'int')
('IDENTIFIER', 'countC')
('ASSIGN', '=')
('INTEGER', '0')
('IDENTIFIER', 'Integer')
('IDENTIFIER', 'one')
('COMMA', ',')
('IDENTIFIER', 'two')
('COMMA', ',')
('IDENTIFIER', 'three')
('STATIC', 'static')
('PUBLIC', 'public')
('TYPE_VOID', 'void')
('IDENTIFIER', 'PrintStack')
('LPAREN', '(')
('IDENTIFIER', 'Stack')
('IDENTIFIER', 's')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'print')
('LPAREN', '(')
('IDENTIFIER', 's')
('PERIOD', '.')
('IDENTIFIER', 'toString')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('RBRACE', '}')
('PUBLIC', 'public')
('STATIC', 'static')
('TYPE_VOID', 'void')
('IDENTIFIER', 'main')
('LPAREN', '(')
('IDENTIFIER', 'String')
('LBRACKET', '[')
('RBRACKET', ']')
('IDENTIFIER', 'args')
('RPAREN', ')')
('LBRACE', '{')
('TRY', 'try')
('LBRACE', '{')
('TYPE_INT', 'int')
('IDENTIFIER', 'maxdisc')
('ASSIGN', '=')
('INTEGER', '0')
('IDENTIFIER', 'String')
('IDENTIFIER', 'inpstring')
('ASSIGN', '=')
('IDENTIFIER', 'args')
('LBRACKET', '[')
('INTEGER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'movecount')
('ASSIGN', '=')
('INTEGER', '0')
('IDENTIFIER', 'maxdisc')
('ASSIGN', '=')
('IDENTIFIER', 'Integer')
('PERIOD', '.')
('IDENTIFIER', 'parseInt')
('LPAREN', '(')
('IDENTIFIER', 'inpstring')
('RPAREN', ')')
('IF', 'if')
('LPAREN', '(')
('IDENTIFIER', 'maxdisc')
('LESSTHAN_EQUALTO', '<=')
('INTEGER', '1')
('OR', '||')
('IDENTIFIER', 'maxdisc')
('GREATERTHAN_EQUALTO', '>=')
('INTEGER', '10')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Enter')
('IDENTIFIER', 'between')
('INTEGER', '2')
('MINUS', '-')
('INTEGER', '9')
('QUOTEMARK', '"')
('RPAREN', ')')
('RETURN', 'return')
('RBRACE', '}')
('FOR', 'for')
('LPAREN', '(')
('TYPE_INT', 'int')
('IDENTIFIER', 'i')
('ASSIGN', '=')
('IDENTIFIER', 'maxdisc')
('IDENTIFIER', 'i')
('GREATERTHAN_EQUALTO', '>=')
('INTEGER', '1')
('IDENTIFIER', 'i')
('DECREMENT', '--')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'push')
('LPAREN', '(')
('IDENTIFIER', 'i')
('RPAREN', ')')
('RBRACE', '}')
('IDENTIFIER', 'countA')
('ASSIGN', '=')
('IDENTIFIER', 'A')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'countB')
('ASSIGN', '=')
('IDENTIFIER', 'B')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'countC')
('ASSIGN', '=')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'PrintStacks')
('LPAREN', '(')
('RPAREN', ')')
('IDENTIFIER', 'SolveTOH')
('LPAREN', '(')
('IDENTIFIER', 'maxdisc')
('COMMA', ',')
('IDENTIFIER', 'A')
('COMMA', ',')
('IDENTIFIER', 'B')
('COMMA', ',')
('IDENTIFIER', 'C')
('RPAREN', ')')
('IDENTIFIER', 'System')
('PERIOD', '.')
('IDENTIFIER', 'out')
('PERIOD', '.')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTEMARK', '"')
('IDENTIFIER', 'Total')
('IDENTIFIER', 'Moves')
('ASSIGN', '=')
('QUOTEMARK', '"')
('PLUS', '+')
('IDENTIFIER', 'movecount')
('RPAREN', ')')
('WHILE', 'while')
('LPAREN', '(')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'size')
('LPAREN', '(')
('RPAREN', ')')
('GREATERTHAN', '>')
('INTEGER', '0')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'C')
('PERIOD', '.')
('IDENTIFIER', 'pop')
('LPAREN', '(')
('RPAREN', ')')
('RBRACE', '}')
('RBRACE', '}')
('CATCH', 'catch')
('LPAREN', '(')
('IDENTIFIER', 'Exception')
('IDENTIFIER', 'e')
('RPAREN', ')')
('LBRACE', '{')
('IDENTIFIER', 'e')
('PERIOD', '.')
('IDENTIFIER', 'printStackTrace')
('LPAREN', '(')
('RPAREN', ')')
('RBRACE', '}')
('IDENTIFIER', 'java')
('PERIOD', '.')
('IDENTIFIER', 'Lang')
('PERIOD', '.')
('IDENTIFIER', 'Integer')
('RBRACE', '}')
('RBRACE', '}')
(None, '')
